name: Deploy to Tomcat

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Build the application
        run: |
          mvn clean install

      - name: Docker image exists
        uses: cloudposse/github-action-docker-image-exists@0.1.2
        with:
          # Organization
          organization: dockerhub
          # Repository
          repository: tomcat_image
          # Docker registry
          registry: rodrigoalcaide
          # Image name (excluding registry). Defaults to {{$organization/$repository}}.
          image_name: tomcat_image
          # Tag
          tag: latest
          # Docker login
          login: ${{ secrets.DOCKER_PASSWORD }}
          # Docker password
          password: ${{ secrets.DOCKER_USERNAME }}

      #- name: Pull Docker Image
      #  run: |
      #    docker pull rodrigoalcaide/tomcat_image:latest
      #  env:
      #    DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      #    DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

      - name: Check if Container Exists
        id: container_check
        run: |
          if (docker ps -a -f name=tomcat-container) {
            Write-Host "Container already exists."
            Write-Host "::set-output name=container_exists::true"
          } else {
            Write-Host "Container does not exist."
            Write-Host "::set-output name=container_exists::false"
          }  
      - name: Create Container
        #if: steps.container_check.outputs.container_exists == 'false'
        run: |
          docker run -d --name tomcat-container -p 8080:8080 rodrigoalcaide/tomcat_image:latest   
      

      - name: Deploy to Tomcat
        run: |
          docker cp ${{ secrets.PATH_TO_WAR }} tomcat-container:/usr/local/tomcat/webapps/
        working-directory: ${{ github.workspace }}

      - name: Restart Tomcat
        run: |
          docker restart tomcat-container

